name: build-linux

on:
  push:
    branches: [ "master" ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    if:  startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
          submodules: true  # This tells checkout action to clone submodules
          token: ${{ secrets.GH_PAT }}  # Personal Access Token with repo scope

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.3'

    - name: pull
      run: git submodule update --init --recursive

    - name: Build
      run:  go build -o lspvi-amd64-linux
      
    - name: Buildwin
      run: win=1 bash build.sh
      
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if:  startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.RTOKEN }}
      with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false





    - name: Upload Linux Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RTOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./lspvi-amd64-linux
        asset_name: lspvi-amd64-linux
        asset_content_type: application/octet-stream


    - name: Upload win64 Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RTOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./lspvi-window-x64
        asset_name: lspvi-window-x64
        asset_content_type: application/octet-stream
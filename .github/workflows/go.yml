# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            output: lspvi-darwin
          - os: ubuntu-latest
            output: lspvi-linux
          - os: windows-latest
            output: lspvi.exe

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
      with:
          submodules: true  # This tells checkout action to clone submodules
          token: ${{ secrets.GH_PAT }}  # Personal Access Token with repo scope

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.3'

    - name: pull
      run: git submodule update --init --recursive

    - name: Build
      run: go build -o ${{ matrix.output }}



    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ matrix.output }}
      env:
        GITHUB_TOKEN: ${{ secrets.RTOKEN }}

      
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.RTOKEN }}
    #   with:
    #       tag_name: v${{ github.run_number }}  # Or your version like v1.0.0
    #       # Don't use refs/tags/ prefix
    #       release_name: Release v${{ github.run_number }}
    #       draft: false
    #       prerelease: false



    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.output }}
        path: ${{ matrix.output }}


    # - name: Upload Linux Artifact
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.RTOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./lspvi-amd64-linux
    #     asset_name: lspvi-amd64-linux
    #     asset_content_type: application/octet-stream


    - name: Upload all Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RTOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ matrix.output }}
        asset_name: ${{ matrix.output }}
        asset_content_type: application/octet-stream
